openapi: "3.0.1"
info:
  title: virtual currency
  version: 1.0.0
  description: |
    an API that allows users to send virtual currency to each other.

paths:
  /users:
    post:
      summary: add users to VC App
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'

      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /transactions:
    get:
      tags:
        - transactions
      summary: Find all transaction by User ID
      description: |
        For each user retrieve a list of VC transactions where they can see who theyâ€™ve sent and received money from.
      operationId: getTransactionsByUserId
      parameters:
        - name: userId
          in: header
          description: User Id
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        '400':
          description: Invalid user Id
        '401':
          description: Un Authorized
        '404':
          description: transactions not found


components:
  schemas:
    TransactionRequest:
      type: array
      minItems: 1
      maxItems: 10
      items:
        $ref: '#/components/schemas/BeneficiaryDetails'
    UserRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password


    UserResponse:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        walletDetails:
          $ref: '#/components/schemas/WalletDetails'
    WalletDetails:
      type: object
      properties:
        fund:
          type: number
        walletId:
          type: string

    BeneficiaryDetails:
      type: object
      properties:
        userId:
          type: string
        walletId:
          type: string
        amount:
          type: number
    Transactions:
      type: array
      items:
        $ref: '#/components/schemas/TransactionResponse'

    TransactionResponse:
      type: object
      description: represents Transaction object
      properties:
        ref:
          type: string
        from:
          type: string
        to:
          type: string
        amount:
          type: string
        created_at:
          type: string
          format: datetime
        tranactionType:
          type: string

    ErrorDetails:
      type: object
      required:
        - code
        - message
      properties:
        date:
          type: string
          format: datetime
        status:
          type: string
        error:
          type: string
        uri:
          type: string
        message:
          type: string